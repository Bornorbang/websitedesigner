# Generated by Django 5.1.4 on 2025-09-01 16:31

import ckeditor.fields
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0010_consultationbooking'),
    ]

    operations = [
        migrations.CreateModel(
            name='CourseCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, help_text='CSS class for icon', max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Course Categories',
            },
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('bio', models.TextField()),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='instructors/')),
                ('expertise', models.CharField(help_text='Comma-separated expertise areas', max_length=500)),
                ('years_experience', models.PositiveIntegerField(default=0)),
                ('linkedin_url', models.URLField(blank=True)),
                ('twitter_url', models.URLField(blank=True)),
                ('website_url', models.URLField(blank=True)),
                ('rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('students_count', models.PositiveIntegerField(default=0)),
                ('courses_count', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('subtitle', models.CharField(blank=True, max_length=500)),
                ('description', ckeditor.fields.RichTextField()),
                ('short_description', models.TextField(max_length=500)),
                ('level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('expert', 'Expert')], default='beginner', max_length=20)),
                ('language', models.CharField(default='English', max_length=50)),
                ('thumbnail', models.ImageField(upload_to='course_thumbnails/')),
                ('preview_video', models.URLField(blank=True, help_text='YouTube or Vimeo URL')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('original_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_free', models.BooleanField(default=False)),
                ('rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('reviews_count', models.PositiveIntegerField(default=0)),
                ('students_count', models.PositiveIntegerField(default=0)),
                ('total_duration', models.PositiveIntegerField(default=0, help_text='Total duration in minutes')),
                ('lectures_count', models.PositiveIntegerField(default=0)),
                ('learning_objectives', models.TextField(help_text='One objective per line')),
                ('prerequisites', models.TextField(blank=True, help_text='One prerequisite per line')),
                ('target_audience', models.TextField(blank=True, help_text='One target per line')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('coming_soon', 'Coming Soon')], default='draft', max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('meta_description', models.TextField(blank=True, max_length=160)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='app.coursecategory')),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='app.instructor')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CourseSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='app.course')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Lecture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('content', ckeditor.fields.RichTextField(blank=True)),
                ('lecture_type', models.CharField(choices=[('video', 'Video'), ('text', 'Text'), ('quiz', 'Quiz'), ('assignment', 'Assignment')], default='video', max_length=20)),
                ('video_url', models.URLField(blank=True)),
                ('duration', models.PositiveIntegerField(default=0, help_text='Duration in minutes')),
                ('attachments', models.FileField(blank=True, null=True, upload_to='lecture_attachments/')),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_preview', models.BooleanField(default=False, help_text='Can be viewed without enrollment')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lectures', to='app.coursesection')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='CourseReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_name', models.CharField(max_length=200)),
                ('student_email', models.EmailField(max_length=254)),
                ('rating', models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('review_text', models.TextField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_approved', models.BooleanField(default=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='app.course')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('course', 'student_email')},
            },
        ),
    ]
